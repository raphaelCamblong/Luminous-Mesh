// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: node.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeStatus_State int32

const (
	NodeStatus_UNKNOWN     NodeStatus_State = 0
	NodeStatus_HEALTHY     NodeStatus_State = 1
	NodeStatus_DEGRADED    NodeStatus_State = 2
	NodeStatus_ERROR       NodeStatus_State = 3
	NodeStatus_MAINTENANCE NodeStatus_State = 4
)

// Enum value maps for NodeStatus_State.
var (
	NodeStatus_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "DEGRADED",
		3: "ERROR",
		4: "MAINTENANCE",
	}
	NodeStatus_State_value = map[string]int32{
		"UNKNOWN":     0,
		"HEALTHY":     1,
		"DEGRADED":    2,
		"ERROR":       3,
		"MAINTENANCE": 4,
	}
)

func (x NodeStatus_State) Enum() *NodeStatus_State {
	p := new(NodeStatus_State)
	*p = x
	return p
}

func (x NodeStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_node_proto_enumTypes[0].Descriptor()
}

func (NodeStatus_State) Type() protoreflect.EnumType {
	return &file_node_proto_enumTypes[0]
}

func (x NodeStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus_State.Descriptor instead.
func (NodeStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{7, 0}
}

type RegisterNodeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BootstrapToken string                 `protobuf:"bytes,1,opt,name=bootstrap_token,json=bootstrapToken,proto3" json:"bootstrap_token,omitempty"` // Initial bootstrap token
	BasicInfo      *NodeBasicInfo         `protobuf:"bytes,2,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	Csr            []byte                 `protobuf:"bytes,3,opt,name=csr,proto3" json:"csr,omitempty"` // Certificate Signing Request
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterNodeRequest) GetBootstrapToken() string {
	if x != nil {
		return x.BootstrapToken
	}
	return ""
}

func (x *RegisterNodeRequest) GetBasicInfo() *NodeBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *RegisterNodeRequest) GetCsr() []byte {
	if x != nil {
		return x.Csr
	}
	return nil
}

type RegisterNodeResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SignedCertificate []byte                 `protobuf:"bytes,3,opt,name=signed_certificate,json=signedCertificate,proto3" json:"signed_certificate,omitempty"` // Signed certificate from control plane
	NodeId            string                 `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	InitialAuthToken  string                 `protobuf:"bytes,5,opt,name=initial_auth_token,json=initialAuthToken,proto3" json:"initial_auth_token,omitempty"`
	ControlPlaneInfo  *ControlPlaneInfo      `protobuf:"bytes,6,opt,name=control_plane_info,json=controlPlaneInfo,proto3" json:"control_plane_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterNodeResponse) GetSignedCertificate() []byte {
	if x != nil {
		return x.SignedCertificate
	}
	return nil
}

func (x *RegisterNodeResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RegisterNodeResponse) GetInitialAuthToken() string {
	if x != nil {
		return x.InitialAuthToken
	}
	return ""
}

func (x *RegisterNodeResponse) GetControlPlaneInfo() *ControlPlaneInfo {
	if x != nil {
		return x.ControlPlaneInfo
	}
	return nil
}

type AuthenticationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	AuthToken     string                 `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Certificate   []byte                 `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
	BasicInfo     *NodeBasicInfo         `protobuf:"bytes,4,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	Capabilities  *NodeCapabilities      `protobuf:"bytes,5,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticationRequest) Reset() {
	*x = AuthenticationRequest{}
	mi := &file_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationRequest) ProtoMessage() {}

func (x *AuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{2}
}

func (x *AuthenticationRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *AuthenticationRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *AuthenticationRequest) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *AuthenticationRequest) GetBasicInfo() *NodeBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *AuthenticationRequest) GetCapabilities() *NodeCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type AuthenticationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SessionId     string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TokenExpiry   int64                  `protobuf:"varint,4,opt,name=token_expiry,json=tokenExpiry,proto3" json:"token_expiry,omitempty"`
	InitialConfig *NodeConfiguration     `protobuf:"bytes,5,opt,name=initial_config,json=initialConfig,proto3" json:"initial_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticationResponse) Reset() {
	*x = AuthenticationResponse{}
	mi := &file_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationResponse) ProtoMessage() {}

func (x *AuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{3}
}

func (x *AuthenticationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthenticationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthenticationResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthenticationResponse) GetTokenExpiry() int64 {
	if x != nil {
		return x.TokenExpiry
	}
	return 0
}

func (x *AuthenticationResponse) GetInitialConfig() *NodeConfiguration {
	if x != nil {
		return x.InitialConfig
	}
	return nil
}

type NodeStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Status        *NodeStatus            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Metrics       []*MetricsReport       `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatusUpdate) Reset() {
	*x = NodeStatusUpdate{}
	mi := &file_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatusUpdate) ProtoMessage() {}

func (x *NodeStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatusUpdate.ProtoReflect.Descriptor instead.
func (*NodeStatusUpdate) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{4}
}

func (x *NodeStatusUpdate) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeStatusUpdate) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *NodeStatusUpdate) GetStatus() *NodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *NodeStatusUpdate) GetMetrics() []*MetricsReport {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *NodeStatusUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ControlPlaneCommand struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CommandId string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	// Types that are valid to be assigned to Command:
	//
	//	*ControlPlaneCommand_ConfigUpdate
	//	*ControlPlaneCommand_HealthCheck
	//	*ControlPlaneCommand_Disconnect
	Command       isControlPlaneCommand_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlPlaneCommand) Reset() {
	*x = ControlPlaneCommand{}
	mi := &file_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlPlaneCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlaneCommand) ProtoMessage() {}

func (x *ControlPlaneCommand) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlaneCommand.ProtoReflect.Descriptor instead.
func (*ControlPlaneCommand) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{5}
}

func (x *ControlPlaneCommand) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *ControlPlaneCommand) GetCommand() isControlPlaneCommand_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ControlPlaneCommand) GetConfigUpdate() *ConfigurationUpdate {
	if x != nil {
		if x, ok := x.Command.(*ControlPlaneCommand_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

func (x *ControlPlaneCommand) GetHealthCheck() *HealthCheck {
	if x != nil {
		if x, ok := x.Command.(*ControlPlaneCommand_HealthCheck); ok {
			return x.HealthCheck
		}
	}
	return nil
}

func (x *ControlPlaneCommand) GetDisconnect() *Disconnect {
	if x != nil {
		if x, ok := x.Command.(*ControlPlaneCommand_Disconnect); ok {
			return x.Disconnect
		}
	}
	return nil
}

type isControlPlaneCommand_Command interface {
	isControlPlaneCommand_Command()
}

type ControlPlaneCommand_ConfigUpdate struct {
	ConfigUpdate *ConfigurationUpdate `protobuf:"bytes,2,opt,name=config_update,json=configUpdate,proto3,oneof"`
}

type ControlPlaneCommand_HealthCheck struct {
	HealthCheck *HealthCheck `protobuf:"bytes,3,opt,name=health_check,json=healthCheck,proto3,oneof"`
}

type ControlPlaneCommand_Disconnect struct {
	Disconnect *Disconnect `protobuf:"bytes,4,opt,name=disconnect,proto3,oneof"`
}

func (*ControlPlaneCommand_ConfigUpdate) isControlPlaneCommand_Command() {}

func (*ControlPlaneCommand_HealthCheck) isControlPlaneCommand_Command() {}

func (*ControlPlaneCommand_Disconnect) isControlPlaneCommand_Command() {}

type NodeBasicInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Hostname            string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress           string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Version             string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	SupportedModelTypes []string               `protobuf:"bytes,4,rep,name=supported_model_types,json=supportedModelTypes,proto3" json:"supported_model_types,omitempty"`
	Architecture        string                 `protobuf:"bytes,5,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Labels              map[string]string      `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *NodeBasicInfo) Reset() {
	*x = NodeBasicInfo{}
	mi := &file_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeBasicInfo) ProtoMessage() {}

func (x *NodeBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeBasicInfo.ProtoReflect.Descriptor instead.
func (*NodeBasicInfo) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{6}
}

func (x *NodeBasicInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *NodeBasicInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NodeBasicInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeBasicInfo) GetSupportedModelTypes() []string {
	if x != nil {
		return x.SupportedModelTypes
	}
	return nil
}

func (x *NodeBasicInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *NodeBasicInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type NodeStatus struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	State         NodeStatus_State           `protobuf:"varint,1,opt,name=state,proto3,enum=luminousmesh.NodeStatus_State" json:"state,omitempty"`
	StatusMessage string                     `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	Resources     map[string]*ResourceStatus `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	mi := &file_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{7}
}

func (x *NodeStatus) GetState() NodeStatus_State {
	if x != nil {
		return x.State
	}
	return NodeStatus_UNKNOWN
}

func (x *NodeStatus) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *NodeStatus) GetResources() map[string]*ResourceStatus {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ResourceStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UsagePercentage float64                `protobuf:"fixed64,2,opt,name=usage_percentage,json=usagePercentage,proto3" json:"usage_percentage,omitempty"`
	Status          string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResourceStatus) Reset() {
	*x = ResourceStatus{}
	mi := &file_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStatus) ProtoMessage() {}

func (x *ResourceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStatus.ProtoReflect.Descriptor instead.
func (*ResourceStatus) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceStatus) GetUsagePercentage() float64 {
	if x != nil {
		return x.UsagePercentage
	}
	return 0
}

func (x *ResourceStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MetricsReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetricName    string                 `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsReport) Reset() {
	*x = MetricsReport{}
	mi := &file_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsReport) ProtoMessage() {}

func (x *MetricsReport) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsReport.ProtoReflect.Descriptor instead.
func (*MetricsReport) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{9}
}

func (x *MetricsReport) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *MetricsReport) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MetricsReport) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type TokenRotationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CurrentToken  string                 `protobuf:"bytes,2,opt,name=current_token,json=currentToken,proto3" json:"current_token,omitempty"`
	SessionId     string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenRotationRequest) Reset() {
	*x = TokenRotationRequest{}
	mi := &file_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenRotationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRotationRequest) ProtoMessage() {}

func (x *TokenRotationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRotationRequest.ProtoReflect.Descriptor instead.
func (*TokenRotationRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{10}
}

func (x *TokenRotationRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TokenRotationRequest) GetCurrentToken() string {
	if x != nil {
		return x.CurrentToken
	}
	return ""
}

func (x *TokenRotationRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type TokenRotationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewToken      string                 `protobuf:"bytes,1,opt,name=new_token,json=newToken,proto3" json:"new_token,omitempty"`
	Expiry        int64                  `protobuf:"varint,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenRotationResponse) Reset() {
	*x = TokenRotationResponse{}
	mi := &file_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenRotationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRotationResponse) ProtoMessage() {}

func (x *TokenRotationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRotationResponse.ProtoReflect.Descriptor instead.
func (*TokenRotationResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{11}
}

func (x *TokenRotationResponse) GetNewToken() string {
	if x != nil {
		return x.NewToken
	}
	return ""
}

func (x *TokenRotationResponse) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

type ControlPlaneInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ApiEndpoint      string                 `protobuf:"bytes,1,opt,name=api_endpoint,json=apiEndpoint,proto3" json:"api_endpoint,omitempty"`
	CaCertificate    []byte                 `protobuf:"bytes,2,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"`
	ConnectionParams map[string]string      `protobuf:"bytes,3,rep,name=connection_params,json=connectionParams,proto3" json:"connection_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ControlPlaneInfo) Reset() {
	*x = ControlPlaneInfo{}
	mi := &file_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlPlaneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlaneInfo) ProtoMessage() {}

func (x *ControlPlaneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlaneInfo.ProtoReflect.Descriptor instead.
func (*ControlPlaneInfo) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{12}
}

func (x *ControlPlaneInfo) GetApiEndpoint() string {
	if x != nil {
		return x.ApiEndpoint
	}
	return ""
}

func (x *ControlPlaneInfo) GetCaCertificate() []byte {
	if x != nil {
		return x.CaCertificate
	}
	return nil
}

func (x *ControlPlaneInfo) GetConnectionParams() map[string]string {
	if x != nil {
		return x.ConnectionParams
	}
	return nil
}

type ConfigurationUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigId      string                 `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Configuration *NodeConfiguration     `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationUpdate) Reset() {
	*x = ConfigurationUpdate{}
	mi := &file_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationUpdate) ProtoMessage() {}

func (x *ConfigurationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationUpdate.ProtoReflect.Descriptor instead.
func (*ConfigurationUpdate) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{13}
}

func (x *ConfigurationUpdate) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ConfigurationUpdate) GetConfiguration() *NodeConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type HealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CheckId       string                 `protobuf:"bytes,1,opt,name=check_id,json=checkId,proto3" json:"check_id,omitempty"`
	CheckItems    []string               `protobuf:"bytes,2,rep,name=check_items,json=checkItems,proto3" json:"check_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_node_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{14}
}

func (x *HealthCheck) GetCheckId() string {
	if x != nil {
		return x.CheckId
	}
	return ""
}

func (x *HealthCheck) GetCheckItems() []string {
	if x != nil {
		return x.CheckItems
	}
	return nil
}

type Disconnect struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Reason           string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	ReconnectAllowed bool                   `protobuf:"varint,2,opt,name=reconnect_allowed,json=reconnectAllowed,proto3" json:"reconnect_allowed,omitempty"`
	WaitTimeSeconds  int32                  `protobuf:"varint,3,opt,name=wait_time_seconds,json=waitTimeSeconds,proto3" json:"wait_time_seconds,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Disconnect) Reset() {
	*x = Disconnect{}
	mi := &file_node_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disconnect) ProtoMessage() {}

func (x *Disconnect) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disconnect.ProtoReflect.Descriptor instead.
func (*Disconnect) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{15}
}

func (x *Disconnect) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Disconnect) GetReconnectAllowed() bool {
	if x != nil {
		return x.ReconnectAllowed
	}
	return false
}

func (x *Disconnect) GetWaitTimeSeconds() int32 {
	if x != nil {
		return x.WaitTimeSeconds
	}
	return 0
}

type NodeConfiguration struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Settings        map[string]string      `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EnabledFeatures []string               `protobuf:"bytes,2,rep,name=enabled_features,json=enabledFeatures,proto3" json:"enabled_features,omitempty"`
	ResourceLimits  *ResourceLimits        `protobuf:"bytes,3,opt,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NodeConfiguration) Reset() {
	*x = NodeConfiguration{}
	mi := &file_node_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfiguration) ProtoMessage() {}

func (x *NodeConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfiguration.ProtoReflect.Descriptor instead.
func (*NodeConfiguration) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{16}
}

func (x *NodeConfiguration) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *NodeConfiguration) GetEnabledFeatures() []string {
	if x != nil {
		return x.EnabledFeatures
	}
	return nil
}

func (x *NodeConfiguration) GetResourceLimits() *ResourceLimits {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

type ResourceLimits struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MaxConcurrentTasks int32                  `protobuf:"varint,1,opt,name=max_concurrent_tasks,json=maxConcurrentTasks,proto3" json:"max_concurrent_tasks,omitempty"`
	MaxMemoryMb        int32                  `protobuf:"varint,2,opt,name=max_memory_mb,json=maxMemoryMb,proto3" json:"max_memory_mb,omitempty"`
	MaxCpuUsage        float64                `protobuf:"fixed64,3,opt,name=max_cpu_usage,json=maxCpuUsage,proto3" json:"max_cpu_usage,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResourceLimits) Reset() {
	*x = ResourceLimits{}
	mi := &file_node_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimits) ProtoMessage() {}

func (x *ResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimits.ProtoReflect.Descriptor instead.
func (*ResourceLimits) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{17}
}

func (x *ResourceLimits) GetMaxConcurrentTasks() int32 {
	if x != nil {
		return x.MaxConcurrentTasks
	}
	return 0
}

func (x *ResourceLimits) GetMaxMemoryMb() int32 {
	if x != nil {
		return x.MaxMemoryMb
	}
	return 0
}

func (x *ResourceLimits) GetMaxCpuUsage() float64 {
	if x != nil {
		return x.MaxCpuUsage
	}
	return 0
}

type NodeCapabilities struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SupportedModelTypes []string               `protobuf:"bytes,1,rep,name=supported_model_types,json=supportedModelTypes,proto3" json:"supported_model_types,omitempty"`
	Architecture        string                 `protobuf:"bytes,2,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Labels              map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *NodeCapabilities) Reset() {
	*x = NodeCapabilities{}
	mi := &file_node_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCapabilities) ProtoMessage() {}

func (x *NodeCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCapabilities.ProtoReflect.Descriptor instead.
func (*NodeCapabilities) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{18}
}

func (x *NodeCapabilities) GetSupportedModelTypes() []string {
	if x != nil {
		return x.SupportedModelTypes
	}
	return nil
}

func (x *NodeCapabilities) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *NodeCapabilities) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_node_proto protoreflect.FileDescriptor

const file_node_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"node.proto\x12\fluminousmesh\"\x8c\x01\n" +
	"\x13RegisterNodeRequest\x12'\n" +
	"\x0fbootstrap_token\x18\x01 \x01(\tR\x0ebootstrapToken\x12:\n" +
	"\n" +
	"basic_info\x18\x02 \x01(\v2\x1b.luminousmesh.NodeBasicInfoR\tbasicInfo\x12\x10\n" +
	"\x03csr\x18\x03 \x01(\fR\x03csr\"\x8e\x02\n" +
	"\x14RegisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12-\n" +
	"\x12signed_certificate\x18\x03 \x01(\fR\x11signedCertificate\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12,\n" +
	"\x12initial_auth_token\x18\x05 \x01(\tR\x10initialAuthToken\x12L\n" +
	"\x12control_plane_info\x18\x06 \x01(\v2\x1e.luminousmesh.ControlPlaneInfoR\x10controlPlaneInfo\"\xf1\x01\n" +
	"\x15AuthenticationRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x02 \x01(\tR\tauthToken\x12 \n" +
	"\vcertificate\x18\x03 \x01(\fR\vcertificate\x12:\n" +
	"\n" +
	"basic_info\x18\x04 \x01(\v2\x1b.luminousmesh.NodeBasicInfoR\tbasicInfo\x12B\n" +
	"\fcapabilities\x18\x05 \x01(\v2\x1e.luminousmesh.NodeCapabilitiesR\fcapabilities\"\xd6\x01\n" +
	"\x16AuthenticationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12!\n" +
	"\ftoken_expiry\x18\x04 \x01(\x03R\vtokenExpiry\x12F\n" +
	"\x0einitial_config\x18\x05 \x01(\v2\x1f.luminousmesh.NodeConfigurationR\rinitialConfig\"\xd1\x01\n" +
	"\x10NodeStatusUpdate\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x120\n" +
	"\x06status\x18\x03 \x01(\v2\x18.luminousmesh.NodeStatusR\x06status\x125\n" +
	"\ametrics\x18\x04 \x03(\v2\x1b.luminousmesh.MetricsReportR\ametrics\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"\x85\x02\n" +
	"\x13ControlPlaneCommand\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x12H\n" +
	"\rconfig_update\x18\x02 \x01(\v2!.luminousmesh.ConfigurationUpdateH\x00R\fconfigUpdate\x12>\n" +
	"\fhealth_check\x18\x03 \x01(\v2\x19.luminousmesh.HealthCheckH\x00R\vhealthCheck\x12:\n" +
	"\n" +
	"disconnect\x18\x04 \x01(\v2\x18.luminousmesh.DisconnectH\x00R\n" +
	"disconnectB\t\n" +
	"\acommand\"\xb8\x02\n" +
	"\rNodeBasicInfo\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x122\n" +
	"\x15supported_model_types\x18\x04 \x03(\tR\x13supportedModelTypes\x12\"\n" +
	"\farchitecture\x18\x05 \x01(\tR\farchitecture\x12?\n" +
	"\x06labels\x18\x06 \x03(\v2'.luminousmesh.NodeBasicInfo.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd9\x02\n" +
	"\n" +
	"NodeStatus\x124\n" +
	"\x05state\x18\x01 \x01(\x0e2\x1e.luminousmesh.NodeStatus.StateR\x05state\x12%\n" +
	"\x0estatus_message\x18\x02 \x01(\tR\rstatusMessage\x12E\n" +
	"\tresources\x18\x03 \x03(\v2'.luminousmesh.NodeStatus.ResourcesEntryR\tresources\x1aZ\n" +
	"\x0eResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.luminousmesh.ResourceStatusR\x05value:\x028\x01\"K\n" +
	"\x05State\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aHEALTHY\x10\x01\x12\f\n" +
	"\bDEGRADED\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\x0f\n" +
	"\vMAINTENANCE\x10\x04\"g\n" +
	"\x0eResourceStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12)\n" +
	"\x10usage_percentage\x18\x02 \x01(\x01R\x0fusagePercentage\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"\xc2\x01\n" +
	"\rMetricsReport\x12\x1f\n" +
	"\vmetric_name\x18\x01 \x01(\tR\n" +
	"metricName\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12?\n" +
	"\x06labels\x18\x03 \x03(\v2'.luminousmesh.MetricsReport.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\x14TokenRotationRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12#\n" +
	"\rcurrent_token\x18\x02 \x01(\tR\fcurrentToken\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\"L\n" +
	"\x15TokenRotationResponse\x12\x1b\n" +
	"\tnew_token\x18\x01 \x01(\tR\bnewToken\x12\x16\n" +
	"\x06expiry\x18\x02 \x01(\x03R\x06expiry\"\x84\x02\n" +
	"\x10ControlPlaneInfo\x12!\n" +
	"\fapi_endpoint\x18\x01 \x01(\tR\vapiEndpoint\x12%\n" +
	"\x0eca_certificate\x18\x02 \x01(\fR\rcaCertificate\x12a\n" +
	"\x11connection_params\x18\x03 \x03(\v24.luminousmesh.ControlPlaneInfo.ConnectionParamsEntryR\x10connectionParams\x1aC\n" +
	"\x15ConnectionParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"y\n" +
	"\x13ConfigurationUpdate\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\tR\bconfigId\x12E\n" +
	"\rconfiguration\x18\x02 \x01(\v2\x1f.luminousmesh.NodeConfigurationR\rconfiguration\"I\n" +
	"\vHealthCheck\x12\x19\n" +
	"\bcheck_id\x18\x01 \x01(\tR\acheckId\x12\x1f\n" +
	"\vcheck_items\x18\x02 \x03(\tR\n" +
	"checkItems\"}\n" +
	"\n" +
	"Disconnect\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\x12+\n" +
	"\x11reconnect_allowed\x18\x02 \x01(\bR\x10reconnectAllowed\x12*\n" +
	"\x11wait_time_seconds\x18\x03 \x01(\x05R\x0fwaitTimeSeconds\"\x8d\x02\n" +
	"\x11NodeConfiguration\x12I\n" +
	"\bsettings\x18\x01 \x03(\v2-.luminousmesh.NodeConfiguration.SettingsEntryR\bsettings\x12)\n" +
	"\x10enabled_features\x18\x02 \x03(\tR\x0fenabledFeatures\x12E\n" +
	"\x0fresource_limits\x18\x03 \x01(\v2\x1c.luminousmesh.ResourceLimitsR\x0eresourceLimits\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8a\x01\n" +
	"\x0eResourceLimits\x120\n" +
	"\x14max_concurrent_tasks\x18\x01 \x01(\x05R\x12maxConcurrentTasks\x12\"\n" +
	"\rmax_memory_mb\x18\x02 \x01(\x05R\vmaxMemoryMb\x12\"\n" +
	"\rmax_cpu_usage\x18\x03 \x01(\x01R\vmaxCpuUsage\"\xe9\x01\n" +
	"\x10NodeCapabilities\x122\n" +
	"\x15supported_model_types\x18\x01 \x03(\tR\x13supportedModelTypes\x12\"\n" +
	"\farchitecture\x18\x02 \x01(\tR\farchitecture\x12B\n" +
	"\x06labels\x18\x03 \x03(\v2*.luminousmesh.NodeCapabilities.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xfa\x02\n" +
	"\vNodeService\x12W\n" +
	"\fRegisterNode\x12!.luminousmesh.RegisterNodeRequest\x1a\".luminousmesh.RegisterNodeResponse\"\x00\x12[\n" +
	"\fAuthenticate\x12#.luminousmesh.AuthenticationRequest\x1a$.luminousmesh.AuthenticationResponse\"\x00\x12[\n" +
	"\x10StreamConnection\x12\x1e.luminousmesh.NodeStatusUpdate\x1a!.luminousmesh.ControlPlaneCommand\"\x00(\x010\x01\x12X\n" +
	"\vRotateToken\x12\".luminousmesh.TokenRotationRequest\x1a#.luminousmesh.TokenRotationResponse\"\x00B-Z+github.com/luminousmesh/control-plane/protob\x06proto3"

var (
	file_node_proto_rawDescOnce sync.Once
	file_node_proto_rawDescData []byte
)

func file_node_proto_rawDescGZIP() []byte {
	file_node_proto_rawDescOnce.Do(func() {
		file_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_node_proto_rawDesc), len(file_node_proto_rawDesc)))
	})
	return file_node_proto_rawDescData
}

var file_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_node_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_node_proto_goTypes = []any{
	(NodeStatus_State)(0),          // 0: luminousmesh.NodeStatus.State
	(*RegisterNodeRequest)(nil),    // 1: luminousmesh.RegisterNodeRequest
	(*RegisterNodeResponse)(nil),   // 2: luminousmesh.RegisterNodeResponse
	(*AuthenticationRequest)(nil),  // 3: luminousmesh.AuthenticationRequest
	(*AuthenticationResponse)(nil), // 4: luminousmesh.AuthenticationResponse
	(*NodeStatusUpdate)(nil),       // 5: luminousmesh.NodeStatusUpdate
	(*ControlPlaneCommand)(nil),    // 6: luminousmesh.ControlPlaneCommand
	(*NodeBasicInfo)(nil),          // 7: luminousmesh.NodeBasicInfo
	(*NodeStatus)(nil),             // 8: luminousmesh.NodeStatus
	(*ResourceStatus)(nil),         // 9: luminousmesh.ResourceStatus
	(*MetricsReport)(nil),          // 10: luminousmesh.MetricsReport
	(*TokenRotationRequest)(nil),   // 11: luminousmesh.TokenRotationRequest
	(*TokenRotationResponse)(nil),  // 12: luminousmesh.TokenRotationResponse
	(*ControlPlaneInfo)(nil),       // 13: luminousmesh.ControlPlaneInfo
	(*ConfigurationUpdate)(nil),    // 14: luminousmesh.ConfigurationUpdate
	(*HealthCheck)(nil),            // 15: luminousmesh.HealthCheck
	(*Disconnect)(nil),             // 16: luminousmesh.Disconnect
	(*NodeConfiguration)(nil),      // 17: luminousmesh.NodeConfiguration
	(*ResourceLimits)(nil),         // 18: luminousmesh.ResourceLimits
	(*NodeCapabilities)(nil),       // 19: luminousmesh.NodeCapabilities
	nil,                            // 20: luminousmesh.NodeBasicInfo.LabelsEntry
	nil,                            // 21: luminousmesh.NodeStatus.ResourcesEntry
	nil,                            // 22: luminousmesh.MetricsReport.LabelsEntry
	nil,                            // 23: luminousmesh.ControlPlaneInfo.ConnectionParamsEntry
	nil,                            // 24: luminousmesh.NodeConfiguration.SettingsEntry
	nil,                            // 25: luminousmesh.NodeCapabilities.LabelsEntry
}
var file_node_proto_depIdxs = []int32{
	7,  // 0: luminousmesh.RegisterNodeRequest.basic_info:type_name -> luminousmesh.NodeBasicInfo
	13, // 1: luminousmesh.RegisterNodeResponse.control_plane_info:type_name -> luminousmesh.ControlPlaneInfo
	7,  // 2: luminousmesh.AuthenticationRequest.basic_info:type_name -> luminousmesh.NodeBasicInfo
	19, // 3: luminousmesh.AuthenticationRequest.capabilities:type_name -> luminousmesh.NodeCapabilities
	17, // 4: luminousmesh.AuthenticationResponse.initial_config:type_name -> luminousmesh.NodeConfiguration
	8,  // 5: luminousmesh.NodeStatusUpdate.status:type_name -> luminousmesh.NodeStatus
	10, // 6: luminousmesh.NodeStatusUpdate.metrics:type_name -> luminousmesh.MetricsReport
	14, // 7: luminousmesh.ControlPlaneCommand.config_update:type_name -> luminousmesh.ConfigurationUpdate
	15, // 8: luminousmesh.ControlPlaneCommand.health_check:type_name -> luminousmesh.HealthCheck
	16, // 9: luminousmesh.ControlPlaneCommand.disconnect:type_name -> luminousmesh.Disconnect
	20, // 10: luminousmesh.NodeBasicInfo.labels:type_name -> luminousmesh.NodeBasicInfo.LabelsEntry
	0,  // 11: luminousmesh.NodeStatus.state:type_name -> luminousmesh.NodeStatus.State
	21, // 12: luminousmesh.NodeStatus.resources:type_name -> luminousmesh.NodeStatus.ResourcesEntry
	22, // 13: luminousmesh.MetricsReport.labels:type_name -> luminousmesh.MetricsReport.LabelsEntry
	23, // 14: luminousmesh.ControlPlaneInfo.connection_params:type_name -> luminousmesh.ControlPlaneInfo.ConnectionParamsEntry
	17, // 15: luminousmesh.ConfigurationUpdate.configuration:type_name -> luminousmesh.NodeConfiguration
	24, // 16: luminousmesh.NodeConfiguration.settings:type_name -> luminousmesh.NodeConfiguration.SettingsEntry
	18, // 17: luminousmesh.NodeConfiguration.resource_limits:type_name -> luminousmesh.ResourceLimits
	25, // 18: luminousmesh.NodeCapabilities.labels:type_name -> luminousmesh.NodeCapabilities.LabelsEntry
	9,  // 19: luminousmesh.NodeStatus.ResourcesEntry.value:type_name -> luminousmesh.ResourceStatus
	1,  // 20: luminousmesh.NodeService.RegisterNode:input_type -> luminousmesh.RegisterNodeRequest
	3,  // 21: luminousmesh.NodeService.Authenticate:input_type -> luminousmesh.AuthenticationRequest
	5,  // 22: luminousmesh.NodeService.StreamConnection:input_type -> luminousmesh.NodeStatusUpdate
	11, // 23: luminousmesh.NodeService.RotateToken:input_type -> luminousmesh.TokenRotationRequest
	2,  // 24: luminousmesh.NodeService.RegisterNode:output_type -> luminousmesh.RegisterNodeResponse
	4,  // 25: luminousmesh.NodeService.Authenticate:output_type -> luminousmesh.AuthenticationResponse
	6,  // 26: luminousmesh.NodeService.StreamConnection:output_type -> luminousmesh.ControlPlaneCommand
	12, // 27: luminousmesh.NodeService.RotateToken:output_type -> luminousmesh.TokenRotationResponse
	24, // [24:28] is the sub-list for method output_type
	20, // [20:24] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_node_proto_init() }
func file_node_proto_init() {
	if File_node_proto != nil {
		return
	}
	file_node_proto_msgTypes[5].OneofWrappers = []any{
		(*ControlPlaneCommand_ConfigUpdate)(nil),
		(*ControlPlaneCommand_HealthCheck)(nil),
		(*ControlPlaneCommand_Disconnect)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_node_proto_rawDesc), len(file_node_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_proto_goTypes,
		DependencyIndexes: file_node_proto_depIdxs,
		EnumInfos:         file_node_proto_enumTypes,
		MessageInfos:      file_node_proto_msgTypes,
	}.Build()
	File_node_proto = out.File
	file_node_proto_goTypes = nil
	file_node_proto_depIdxs = nil
}
